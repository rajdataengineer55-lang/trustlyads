
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin claim from the user's auth token.
    function isAdmin() {
      return auth.token.admin == true;
    }
    
    // Helper function to check if the user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Anyone can read (get, list) offers.
      allow read: if true;
      
      // Only admins can create, update, or delete offers.
      allow write: if isAdmin();

      // Rules for the 'reviews' subcollection within an offer
      match /reviews/{reviewId} {
        // Anyone can read reviews.
        allow read: if true;
        
        // Only signed-in users can create new reviews.
        allow create: if isSignedIn();
        
        // Users cannot update or delete reviews.
        allow update, delete: if false;
      }
      
      // Rules for the 'stories' subcollection within an offer
      match /stories/{storyId} {
          // Anyone can read stories.
          allow read: if true;
          
          // Only admins can create stories.
          allow create: if isAdmin();

          // Users cannot update or delete stories.
          allow update, delete: if false;
      }
    }
    
    // Rules for the 'followers' collection
    match /followers/{userId} {
        // Anyone can read follower documents (needed for public counts if not using meta).
        allow read: if true;

        // A user can only write (create or delete) their own follower document.
        allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'meta' collection, used for aggregated stats
    match /meta/stats {
        // Anyone can read the public stats document.
        allow get: if true;
        // No client should be able to write to the stats document.
        // This should only be updated by a backend process (Cloud Function).
        allow write: if false;
    }
  }
}
