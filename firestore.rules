rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Offers can be read by anyone if they are not hidden.
    // Admins can read all offers.
    // Only admins can write/update/delete offers.
    match /offers/{offerId} {
      allow get: if resource.data.isHidden == false || isAdmin();
      allow list: if isAdmin() || (query.filters.size() == 0 || (query.filters.size() == 1 && query.filters[0][0] == 'isHidden' && query.filters[0][2] == false));
      allow write: if isAdmin();

      // Reviews can be read by anyone who can see the offer.
      // Only authenticated users can create a review.
      match /reviews/{reviewId} {
        allow read: if get(/databases/$(database)/documents/offers/$(offerId)).data.isHidden == false || isAdmin();
        allow create: if request.auth != null;
        allow update, delete: if false; // Reviews cannot be edited or deleted by users
      }
    }

    // Followers can be read by anyone.
    // Only authenticated users can follow/unfollow (create/delete their own doc).
    match /followers/{userId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Stories can be read by anyone.
    // Only admins can write stories.
    match /stories/{storyId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}