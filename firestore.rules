rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for offers collection
    match /offers/{offerId} {
      // Anyone can read non-hidden offers
      allow read: if resource.data.isHidden == false;
      // Admins can read any offer (covers get and list)
      allow read: if isAdmin();

      // Only admins can create or delete offers
      allow create, delete: if isAdmin();

      // Admins can update any field
      // Any user can update ONLY the views and clicks fields
      allow update: if isAdmin() ||
                      (request.auth != null &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views', 'clicks']));
    }
    
    // Rules for stories collection
    match /stories/{storyId} {
      // Anyone can read stories
      allow read: if true;
      // Only admins can write/delete stories
      allow write: if isAdmin();
    }
    
    // Rules for followers collection
    match /followers/{userId} {
        // Anyone can see the total count, but not who is following
        allow list: if false; 
        allow get: if request.auth != null; // A user can check their own follow status
        
        // Only an authenticated user can follow/unfollow for themselves
        allow create, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for onboardedUsers collection
    match /onboardedUsers/{userId} {
      // ONLY admins can perform any action on this collection
      allow read, write: if isAdmin();
    }
  }
}
