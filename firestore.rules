
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if a user is logged in
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Anyone can read offers
      allow read: if true;

      // Only admins can create, update, or delete offers
      allow write: if isAdmin();

      // Rules for the 'reviews' subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;

        // Any signed-in user can create a review
        allow create: if isSignedIn();

        // No one can update or delete reviews for now
        allow update, delete: if false;
      }
      
      // Rules for the 'stories' subcollection
      match /stories/{storyId} {
        // Anyone can read stories
        allow read: if true;

        // Only admins can create stories
        allow create: if isAdmin();
        
        // No one can update or delete stories
        allow update, delete: if false;
      }
    }

    // Rules for the 'followers' collection
    match /followers/{userId} {
      // A user can only read, create, or delete their own follower document
      allow read, create, delete: if request.auth.uid == userId;

      // Users cannot update their follower doc (create/delete only)
      allow update: if false;
    }

    // Rules for the 'meta' collection (for follower count)
    match /meta/{docId} {
        // Specifically allow public read on the 'stats' document
        allow get: if docId == "stats";

        // Nobody can list the meta collection or write to it from the client
        allow list, write: if false;
    }
  }
}
