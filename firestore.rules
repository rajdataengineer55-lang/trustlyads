
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is the authorized admin via custom claims.
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Anyone can read offers (public content)
      allow read; 
      
      // Only admins can create, update, or delete offers.
      allow write: if isAdmin();

      // Rules for the 'reviews' subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews.
        allow read; 
        
        // Only authenticated users can create new reviews.
        allow create: if request.auth != null;
        
        // Users cannot update or delete reviews.
        allow update, delete: if false; 
      }
      
      // Rules for the 'stories' subcollection
      match /stories/{storyId} {
        // Anyone can read stories.
        allow read; 
        
        // Only admins can write (create, update, delete) stories.
        allow write: if isAdmin();
      }
    }
    
    // Rules for the 'followers' collection
    match /followers/{userId} {
      // Any authenticated user can follow (create their own document)
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Any authenticated user can unfollow (delete their own document)
      allow delete: if request.auth != null && request.auth.uid == userId;
      
      // Nobody can read the full list of followers directly.
      // The count is handled by a secure Cloud Function.
      allow read, list, update: if false;
    }
    
    // Rules for the 'admins' collection (for logging purposes)
    match /admins/{userId} {
       // Only the backend (Cloud Functions) can write to this collection.
       allow write: if false;
       // Only admins can read this collection.
       allow read: if isAdmin();
    }

    // Rules for the 'meta' collection (for aggregated stats like follower count)
    match /meta/{docId} {
      // Anyone can read from this collection to get stats.
      allow read;
      // Nobody except the backend can write to this collection.
      allow write: if false;
    }
  }
}
