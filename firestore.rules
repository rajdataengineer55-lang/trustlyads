
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }

    // Offers Collection
    match /offers/{offerId} {
      // READ: Anyone can read an offer if it is not hidden. Admins can read all offers.
      allow read: if resource.data.isHidden == false || isAdmin();
      
      // CREATE, UPDATE, DELETE: Only admins can create, update, or delete offers.
      allow write: if isAdmin();

      // Reviews Subcollection
      match /reviews/{reviewId} {
        // READ: Anyone can read reviews for a visible offer.
        allow read: if get(/databases/$(database)/documents/offers/$(offerId)).data.isHidden == false || isAdmin();
        
        // CREATE: Any authenticated user can create a review.
        allow create: if isAuth();

        // UPDATE, DELETE: Only admins can modify or delete reviews.
        allow update, delete: if isAdmin();
      }
    }

    // Stories Collection
    match /stories/{storyId} {
      // READ: Anyone can read any story. They are public and temporary.
      allow read: if true;
      
      // CREATE, UPDATE, DELETE: Only admins can manage stories.
      allow write: if isAdmin();
    }

    // Followers Collection
    match /followers/{userId} {
      // READ: Anyone can read the list of followers (though the app logic only uses the count).
      allow read: if true;

      // CREATE, DELETE: An authenticated user can only follow/unfollow for themselves.
      allow create, delete: if isAuth() && request.auth.uid == userId;

      // UPDATE: No one can update a follower document.
      allow update: if false;
    }
  }
}
