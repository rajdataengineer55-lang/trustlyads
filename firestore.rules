rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for offers and their subcollections
    match /offers/{offerId} {
      // Anyone can read offers
      allow read: true;
      // Only admins can create, update, or delete offers
      allow write: if isAdmin();
      
      // Rules for the reviews subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: true;
        // Only authenticated users can create a review
        allow create: if isSignedIn();
        // No one can update or delete reviews through the client
        allow update, delete: if false; 
      }
      
      // Rules for the stories subcollection
      match /stories/{storyId} {
        // Anyone can read stories
        allow read: true;
        // Only admins can create, update, or delete stories
        allow write: if isAdmin();
      }
    }
    
    // Rules for the users collection (for role management)
    match /users/{userId} {
        // Any signed-in user can read the list of users (for mentions, etc. if needed)
        // Admin can write to any user document to change their role
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    // Rules for the followers collection
    match /followers/{userId} {
        // Anyone can read the list of followers
        allow read: true;
        // A user can only follow/unfollow for themselves (create/delete their own follower document)
        allow create, delete: if request.auth.uid == userId;
        // No one can update a follower document directly
        allow update: if false;
    }

    // Rules for the meta collection (where follower count is stored)
    match /meta/stats {
      // Anyone can read the stats document for the follower count
      allow get: true;
      // No one can write to it from the client (it's updated by cloud functions)
      allow write: if false;
    }
  }
}