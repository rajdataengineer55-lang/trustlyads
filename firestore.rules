
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin claims
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Offers can be read by anyone if not hidden, and managed only by admins.
    match /offers/{offerId} {
      allow read: if resource.data.isHidden == false || isAdmin();
      allow list: if isAdmin() || (request.query.where.isHidden == false && request.query.orderBy == null);
      allow create, update, delete: if isAdmin();

      // Reviews can be read by anyone, created by authenticated users, and deleted by admins.
      match /reviews/{reviewId} {
        allow read, list: if true;
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
      }
    }
    
    // Followers can be created/deleted by authenticated users and read only by admins.
    match /followers/{userId} {
      allow read, list: if isAdmin();
      allow create, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Stories can be created by admins.
    // ANY authenticated user can update the 'views' count.
    // Anyone can read stories.
    match /stories/{storyId} {
      allow read, list: if true; // Allows getActiveStories to work for all users
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views']));
    }
  }
}
