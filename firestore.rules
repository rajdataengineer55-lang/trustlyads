rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Anyone can read offers
      allow read: if true;
      
      // Only admins can create, update, or delete offers
      allow write: if isAdmin();

      // Rules for the 'reviews' subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;
        // Only authenticated users can create reviews
        allow create: if request.auth != null;
        // Users cannot update or delete reviews
        allow update, delete: if false;
      }
      
      // Rules for the 'stories' subcollection
      match /stories/{storyId} {
          // Anyone can read stories
          allow read: if true;
          // Only admins can write stories
          allow write: if isAdmin();
      }
    }

    // Rules for the 'followers' collection
    match /followers/{userId} {
        // Anyone can read follower documents (for potential future use)
        allow read: if true;
        // A user can only create or delete their own follower document
        allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for the aggregated stats
    match /meta/stats {
        // Anyone can get the stats document (for follower count)
        allow get: if true;
        // No one can list the meta collection or write to the stats doc from the client
        allow list, write: if false;
    }
  }
}
