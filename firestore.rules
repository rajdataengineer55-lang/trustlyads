
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Admin Rules ---
    // Admins can read and write anything, anywhere. This is the master override.
    match /{document=**} {
      allow read, write: if request.auth.token.admin == true;
    }

    // --- Public & User Rules ---

    // Followers Collection
    // Anyone can read follower count, but only logged-in users can follow/unfollow.
    match /followers/{userId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Offers Collection
    match /offers/{offerId} {
      // Anyone can GET a single offer if it's not hidden.
      allow get: if resource.data.isHidden == false;

      // Anyone can LIST offers, but only if they query for non-hidden ones.
      allow list: if request.query.get('where') == null || 
                   (request.query.where[0] == 'isHidden' && 
                    request.query.where[1] == '==' && 
                    request.query.where[2] == false);
      
      // Reviews Subcollection
      match /reviews/{reviewId} {
        // Anyone can read/list reviews.
        allow read: if true;
        // Only authenticated users can create reviews.
        allow create: if request.auth != null;
      }
    }
    
    // Stories Collection Group
    // This rule is essential for aggregating story view counts in getOffers().
    match /stories/{storyId} {
        // Anyone can read any story.
        allow get, list: if true;
        // Anyone can update ONLY the views field.
        allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views']);
    }
  }
}
