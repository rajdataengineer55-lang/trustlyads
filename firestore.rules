
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin based on custom claims.
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // Offers can be read by anyone, but only created, updated, or deleted by an admin.
    match /offers/{offerId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      // Reviews can be read by anyone, but only created by a signed-in user.
      // Users cannot update or delete reviews after posting.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if false; // Disallow updating/deleting reviews
      }
    }

    // Stories can be read by anyone, but only created or deleted by an admin.
    match /stories/{storyId} {
      allow read: if true;
      allow create, delete: if isAdmin();
    }

    // A signed-in user can add/remove themselves from the followers list.
    // They can only affect their own document (using their UID).
    match /followers/{userId} {
      allow read: if true; // Allow public read for follower count
      allow create, delete: if isSignedIn() && request.auth.uid == userId;
      allow update: if false; // No updates needed for followers
    }
  }
}
