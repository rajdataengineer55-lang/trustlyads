rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    //  Admin-Specific Rules
    // =================================e================================
    
    // The admin user has god-mode access to all collections.
    // This rule allows the admin to read and write to any document
    // in the database, which is necessary for managing content.
    function isAdmin() {
      return request.auth.token.email == "dandurajkumarworld24@gmail.com";
    }
    
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // =================================================================
    //  Public & User-Specific Rules
    // =================================================================
    
    // Offers Collection
    match /offers/{offerId} {
      // Anyone can read a publicly visible (not hidden) offer.
      allow read: if resource.data.isHidden == false;
      
      // Allow authenticated users to create/update offers.
      // The app logic restricts this to the admin, but this provides a fallback.
      allow write: if request.auth != null;

      // Reviews Subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews for a public offer.
        allow read: if get(/databases/$(database)/documents/offers/$(offerId)).data.isHidden == false;
        // Only authenticated users can write a review.
        allow write: if request.auth != null;
      }
      
      // Stories Subcollection
      match /stories/{storyId} {
         // Anyone can read stories for a public offer.
        allow read: if get(/databases/$(database)/documents/offers/$(offerId)).data.isHidden == false;
        // Only authenticated users (specifically admin in-app) can create stories.
        allow write: if request.auth != null;
      }
    }
    
    // Followers Collection
    match /followers/{userId} {
        // Anyone can read the list of followers (for follower count).
        allow read: if true;
        
        // A user can only follow/unfollow themselves.
        allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
