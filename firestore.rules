
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Offers can be read by anyone, but only written by admins.
    match /offers/{offerId} {
      allow read;
      allow write: if isAdmin();
      
      // Reviews can be read by anyone.
      // Any authenticated user can create a review.
      // Only admins can update/delete reviews (future-proofing).
      match /reviews/{reviewId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
      }
      
      // Stories can be read by anyone.
      // Only admins can create stories.
      match /stories/{storyId} {
        allow read;
        allow create: if isAdmin();
        allow update, delete: if isAdmin();
      }
    }

    // Followers can be read by anyone.
    // Any authenticated user can follow (create their own doc).
    // Users can only unfollow themselves (delete their own doc).
    match /followers/{userId} {
        allow read;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users collection should only be managed by admins, but users can read their own data.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if isAdmin();
    }
    
    // Meta collection for stats can be read by anyone, but only written by admins (or backend functions)
    match /meta/{docId} {
        allow read;
        allow write: if isAdmin();
    }
  }
}
