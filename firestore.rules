
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow public read access to offers, but restrict writes to authenticated users.
    // This is a common pattern for public-facing data.
    match /offers/{offerId} {
      allow read: if true; // Everyone can read offers
      allow create, update, delete: if request.auth != null; // Only logged-in users can change offers

      // Rules for the reviews subcollection
      match /reviews/{reviewId} {
        allow read: if true; // Everyone can read reviews
        allow create: if request.auth != null; // Only logged-in users can create reviews
        allow update, delete: if request.auth != null; // Future-proofing: only logged-in users
      }
    }

    // Stories can be read by anyone, but only created/deleted by logged-in users.
    match /stories/{storyId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null;
    }
    
    // Followers can only be managed by the user themselves.
    // This prevents one user from making another user follow/unfollow.
    match /followers/{userId} {
        allow read: if true; // Allow anyone to check follow status (for counts)
        allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
